version: 2.1
orbs:
  codecov: codecov/codecov@3.2.4

.dockersetup:
  &dockersetup
  docker:
    - image: pennlinc/xcp_d_build:0.0.21
  working_directory: /src/xcp_d

runinstall:
  &runinstall
  name: Install xcp_d
  command: |
    VERSION=0+build
    if [[ -n "$CIRCLE_TAG" ]]; then
      VERSION="$CIRCLE_TAG"
    fi
    git checkout $CIRCLE_BRANCH
    echo "${VERSION}" > /src/xcp_d/xcp_d/VERSION
    echo "include xcp_d/VERSION" >> /src/xcp_d/MANIFEST.in
    pip install .[tests] --progress-bar off

    # Write the config file
    mkdir ~/.nipype
    CFG=~/.nipype/nipype.cfg
    printf "[execution]\nstop_on_first_crash = true\n" > ${CFG}
    echo "poll_sleep_duration = 0.01" >> ${CFG}
    echo "hash_method = content" >> ${CFG}

jobs:
  build:
    <<: *dockersetup
    steps:
      - checkout
      - run: *runinstall

  download_data_ds001419:
    <<: *dockersetup
    steps:
      - checkout
      - restore_cache:
          key: ds001419-10
      - run: *runinstall
      - run:
          name: Download ds001419 fMRIPrep test data
          command: |
            cd /src/xcp_d/.circleci
            python get_data.py $PWD/data ds001419
      - save_cache:
          key: ds001419-10
          paths:
            - /src/xcp_d/.circleci/data/ds001419
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    # Why do we need a big executor for this job?
    resource_class: large

  download_data_ds001419_aroma:
    <<: *dockersetup
    steps:
      - checkout
      - restore_cache:
          key: ds001419-aroma-02
      - run: *runinstall
      - run:
          name: Download ds001419 fMRIPost-AROMA test data
          command: |
            cd /src/xcp_d/.circleci
            python get_data.py $PWD/data ds001419-aroma
      - save_cache:
          key: ds001419-aroma-02
          paths:
            - /src/xcp_d/.circleci/data/ds001419-aroma

  download_data_schaefer100:
    <<: *dockersetup
    steps:
      - checkout
      - restore_cache:
          key: schaefer100-02
      - run: *runinstall
      - run:
          name: Download BIDS-Atlas dataset
          command: |
            cd /src/xcp_d/.circleci
            python get_data.py $PWD/data schaefer100
      - save_cache:
          key: schaefer100-02
          paths:
            - /src/xcp_d/.circleci/data/schaefer100

  download_data_pnc:
    <<: *dockersetup
    steps:
      - checkout
      - restore_cache:
          key: pnc-02
      - run: *runinstall
      - run:
          name: Download pnc test data
          command: |
            cd /src/xcp_d/.circleci
            python get_data.py $PWD/data pnc
      - save_cache:
          key: pnc-02
          paths:
            - /src/xcp_d/.circleci/data/pnc
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

  download_data_ukbiobank:
    <<: *dockersetup
    steps:
      - checkout
      - restore_cache:
          key: ukbiobank-08
      - run: *runinstall
      - run:
          name: Download ukbiobank test data
          command: |
            cd /src/xcp_d/.circleci
            python get_data.py $PWD/data ukbiobank
      - save_cache:
          key: ukbiobank-08
          paths:
            - /src/xcp_d/.circleci/data/ukbiobank
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

  download_data_fmriprepwithoutfreesurfer:
    <<: *dockersetup
    steps:
      - checkout
      - restore_cache:
          key: fmriprepwithoutfreesurfer-03
      - run: *runinstall
      - run:
          name: Download fmriprepwithoutfreesurfer test data
          command: |
            cd /src/xcp_d/.circleci
            python get_data.py $PWD/data fmriprepwithoutfreesurfer
      - save_cache:
          key: fmriprepwithoutfreesurfer-03
          paths:
            - /src/xcp_d/.circleci/data/fmriprepwithoutfreesurfer

  download_data_nibabies:
    <<: *dockersetup
    steps:
      - checkout
      - restore_cache:
          key: nibabies-04
      - run: *runinstall
      - run:
          name: Download nibabies test data
          command: |
            cd /src/xcp_d/.circleci
            python get_data.py $PWD/data nibabies
      - save_cache:
          key: nibabies-04
          paths:
              - /src/xcp_d/.circleci/data/nibabies

  nifti_without_freesurfer:
    <<: *dockersetup
    macos:
      xcode: 15.4.0
    resource_class: m2pro.medium
    environment:
      CIRCLE_CPUS: 4
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping nifti_without_freesurfer build"
              circleci step halt
            fi
      - restore_cache:
          key: fmriprepwithoutfreesurfer-03
      - restore_cache:
          key: schaefer100-02
      - run: *runinstall
      - run:
          name: Run full xcp_d on nifti without freesurfer
          no_output_timeout: 1h
          command: |
            pytest -rP -o log_cli=true -m "fmriprep_without_freesurfer" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.fmriprep_without_freesurfer
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage/
          paths:
            - .coverage.fmriprep_without_freesurfer
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_fmriprep_without_freesurfer/

  nifti_without_freesurfer_with_main:
    <<: *dockersetup
    resource_class: medium
    environment:
      CIRCLE_CPUS: 2
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping nifti_without_freesurfer build"
              circleci step halt
            fi
      - restore_cache:
          key: fmriprepwithoutfreesurfer-03
      - run: *runinstall
      - run:
          name: Run full xcp_d on nifti without freesurfer
          no_output_timeout: 1h
          command: |
            pytest -rP -o log_cli=true -m "fmriprep_without_freesurfer_with_main" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.fmriprep_without_freesurfer_with_main
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage/
          paths:
            - .coverage.fmriprep_without_freesurfer_with_main
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_fmriprep_without_freesurfer/

  ds001419_nifti:
    <<: *dockersetup
    resource_class: large
    environment:
      CIRCLE_CPUS: 4
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping ds001419_nifti build"
              circleci step halt
            fi
      - restore_cache:
          key: ds001419-10
      - restore_cache:
          key: ds001419-aroma-02
      - run: *runinstall
      - run:
          name: Run full xcp_d on nifti with freesurfer
          no_output_timeout: 1h
          command: |
            pytest -rP -o log_cli=true -m "ds001419_nifti" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.ds001419_nifti
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage/
          paths:
            - .coverage.ds001419_nifti
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_ds001419_nifti/

  ds001419_cifti:
    <<: *dockersetup
    resource_class: xlarge
    environment:
      CIRCLE_CPUS: 4
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping ds001419_cifti build"
              circleci step halt
            fi
      - restore_cache:
          key: ds001419-10
      - run: *runinstall
      - run:
          name: Run full xcp_d on cifti with freesurfer
          no_output_timeout: 1h
          command: |
            pytest -rP -o log_cli=true -m "ds001419_cifti" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.ds001419_cifti
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage/
          paths:
            - .coverage.ds001419_cifti
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_ds001419_cifti/

  ukbiobank:
    <<: *dockersetup
    resource_class: medium
    environment:
      CIRCLE_CPUS: 2
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping ukbiobank build"
              circleci step halt
            fi
      - restore_cache:
          key: ukbiobank-08
      - run: *runinstall
      - run:
          name: Run full xcp_d on UK Biobank data
          no_output_timeout: 1h
          command: |
            pytest -rP -o log_cli=true -m "ukbiobank" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.ukbiobank
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage/
          paths:
            - .coverage.ukbiobank
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_ukbiobank/

  nibabies:
    <<: *dockersetup
    resource_class: medium
    environment:
      CIRCLE_CPUS: 2
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping nibabies build"
              circleci step halt
            fi
      - restore_cache:
          key: nibabies-04
      - run: *runinstall
      - run:
          name: Run full xcp_d on nibabies
          no_output_timeout: 1h
          command: |
            pytest -rP -o log_cli=true -m "nibabies" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.nibabies
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage/
          paths:
            - .coverage.nibabies
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_nibabies/

  pnc_cifti:
    <<: *dockersetup
    resource_class: large
    environment:
      CIRCLE_CPUS: 2
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping pnc_cifti build"
              circleci step halt
            fi
      - restore_cache:
          key: pnc-02
      - run: *runinstall
      - run:
          name: Run full xcp_d on cifti with freesurfer
          no_output_timeout: 5h
          command: |
            pytest -rP -o log_cli=true -m "pnc_cifti" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.pnc_cifti
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage
          paths:
            - .coverage.pnc_cifti
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_pnc_cifti/

  pnc_cifti_t2wonly:
    <<: *dockersetup
    resource_class: large
    environment:
      CIRCLE_CPUS: 2
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?integration\]' )" != "" ]]; then
              echo "Skipping pnc_cifti_t2wonly build"
              circleci step halt
            fi
      - restore_cache:
          key: pnc-02
      - run: *runinstall
      - run:
          name: Run full xcp_d on cifti with freesurfer
          no_output_timeout: 5h
          command: |
            pytest -rP -o log_cli=true -m "pnc_cifti_t2wonly" \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.pnc_cifti_t2wonly
            # remove nifti files before uploading artifacts
            find /src/xcp_d/.circleci/out/ -name "*.nii.gz" -type f -delete
      - persist_to_workspace:
          root: /src/coverage
          paths:
            - .coverage.pnc_cifti_t2wonly
      - store_artifacts:
          path: /src/xcp_d/.circleci/out/test_pnc_cifti_t2wonly/

  pytests:
    <<: *dockersetup
    resource_class: large
    environment:
      CIRCLE_CPUS: 4
    steps:
      - checkout
      - run:
          name: Check whether build should be skipped
          command: |
            cd /src/xcp_d
            if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?pytests\]' )" != "" ]]; then
              echo "Skipping pytests build"
              circleci step halt
            fi
      - restore_cache:
          key: pnc-02
      - restore_cache:
          key: ds001419-10
      - restore_cache:
          key: fmriprepwithoutfreesurfer-03
      - restore_cache:
          key: nibabies-04
      - restore_cache:
          key: schaefer100-02
      - run: *runinstall
      - run:
          name: Run pytest on the tests directory
          no_output_timeout: 1h
          command: |
            pytest \
              -n ${CIRCLE_CPUS} \
              --cov-append \
              --cov-branch \
              --cov-report term-missing \
              --cov=xcp_d \
              --data_dir=/src/xcp_d/.circleci/data \
              --output_dir=/src/xcp_d/.circleci/out \
              --working_dir=/src/xcp_d/.circleci/work \
              xcp_d
            mkdir /src/coverage
            mv /src/xcp_d/.coverage /src/coverage/.coverage.pytests
      - persist_to_workspace:
          root: /src/coverage
          paths:
            - .coverage.pytests
      - store_artifacts:
          path: /src/xcp_d/.circleci/out

  merge_coverage:
    <<: *dockersetup
    steps:
      - checkout
      - attach_workspace:
          at: /src/coverage
      - run: *runinstall
      - run:
          name: Merge coverage files
          command: |
            cd /src/coverage/
            coverage combine
            coverage xml
      - store_artifacts:
          path: /src/coverage
      - codecov/upload:
          file: /src/coverage/coverage.xml

  deployable:
    docker:
      - image: busybox:latest
    steps:
      - run: echo Deploying!

  build_and_deploy:
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
    docker:
      - image: cimg/base:2020.09
    working_directory: /tmp/src/xcpd_build
    steps:
      - checkout
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: Build Docker image
          no_output_timeout: 3h
          command: |
            # Get version, update files.
            THISVERSION=$(python3 -c "from xcp_d import __version__; print(__version__)")
            sed -i "s/title = {xcp_d}/title = {xcp_d ${CIRCLE_TAG:-$THISVERSION}}/" xcp_d/data/boilerplate.bib
            # Build docker image
            e=1 && for i in {1..5}; do
              docker build \
                --cache-from=pennlinc/xcp_d \
                --rm=false \
                -t pennlinc/xcp_d:latest \
                --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
                --build-arg VCS_REF=`git rev-parse --short HEAD` \
                --build-arg VERSION="${CIRCLE_TAG:-$THISVERSION}" . \
              && e=0 && break || sleep 15
            done && [ "$e" -eq "0" ]
      - run:
          name: Deploy to Docker Hub
          no_output_timeout: 40m
          command: |
            if [[ -n "$DOCKERHUB_TOKEN" ]]; then
              docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
              docker tag pennlinc/xcp_d pennlinc/xcp_d:unstable
              docker push pennlinc/xcp_d:unstable
              if [[ -n "$CIRCLE_TAG" ]]; then
                docker push pennlinc/xcp_d:latest
                docker tag pennlinc/xcp_d pennlinc/xcp_d:$CIRCLE_TAG
                docker push pennlinc/xcp_d:$CIRCLE_TAG
              fi
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - download_data_ds001419:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - download_data_ds001419_aroma:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - download_data_pnc:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - download_data_ukbiobank:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - download_data_fmriprepwithoutfreesurfer:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - download_data_nibabies:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - download_data_schaefer100:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - pnc_cifti:
          requires:
            - download_data_pnc
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - pnc_cifti_t2wonly:
          requires:
            - download_data_pnc
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - ukbiobank:
          requires:
            - download_data_ukbiobank
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - ds001419_nifti:
          requires:
            - download_data_ds001419
            - download_data_ds001419_aroma
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - ds001419_cifti:
          requires:
            - download_data_ds001419
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - nibabies:
          requires:
            - download_data_nibabies
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - nifti_without_freesurfer:
          requires:
            - download_data_fmriprepwithoutfreesurfer
            - download_data_schaefer100
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - nifti_without_freesurfer_with_main:
          requires:
            - download_data_fmriprepwithoutfreesurfer
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - pytests:
          requires:
            - download_data_pnc
            - download_data_fmriprepwithoutfreesurfer
            - download_data_ds001419
            - download_data_nibabies
            - download_data_schaefer100
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - merge_coverage:
          requires:
            - pnc_cifti
            - pnc_cifti_t2wonly
            - ds001419_nifti
            - ds001419_cifti
            - ukbiobank
            - nibabies
            - nifti_without_freesurfer
            - nifti_without_freesurfer_with_main
            - pytests
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - deployable:
          requires:
            - ds001419_nifti
            - ds001419_cifti
            - ukbiobank
            - nifti_without_freesurfer
            - nifti_without_freesurfer_with_main
            - nibabies
            - pnc_cifti
            - pnc_cifti_t2wonly
            - pytests
          filters:
            branches:
              only: main
            tags:
              only: /.*/

      - build_and_deploy:
          requires:
            - deployable
          filters:
            branches:
              only: main
            tags:
              only: /.*/
